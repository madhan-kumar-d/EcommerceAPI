{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Document for ECOM API",
    "description": "Simple Node js Application with Auth, Product, Cart And Checkout\n\nMore Details Check [Swagger Editor](https://editor.swagger.io/)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Signup, Login, RefreshToken, About me"
    },
    {
      "name": "Products",
      "description": ""
    },
    {
      "name": "Cart",
      "description": ""
    },
    {
      "name": "Checkout",
      "description": ""
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create New User",
        "description": "Create new User with user Role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "users"
                  },
                  "email": {
                    "type": "string",
                    "example": "user@domain.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Test@123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict User Email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@domain.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Test@123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid User Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/auth/token": {
      "post": {
        "tags": ["Auth"],
        "summary": "Token",
        "description": "Get Access Token using Refresh Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "UUID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid User Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/auth/aboutme": {
      "get": {
        "tags": ["Auth"],
        "summary": "About Me",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "example": "User Details"
                    },
                    "message": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid User Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Register": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "users"
          },
          "email": {
            "type": "string",
            "example": "user@domain.com"
          },
          "password": {
            "type": "string",
            "example": "Test@123"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "JWT Token"
          },
          "refreshToken": {
            "type": "string",
            "description": "UUID"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Custom Message"
          },
          "errorCodes": {
            "type": "string",
            "description": "Custom Error Code for Vernacular Language Compatibility "
          },
          "errors": {
            "type": "string",
            "description": "Actual Error Message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
